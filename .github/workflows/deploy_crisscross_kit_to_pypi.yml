name: Upload Crisscross-Kit Package to PyPI

on:
  push:
    tags:
      - "python-*"

jobs:
  build_wheels:
    name: Build and publish to PyPI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Fetch full history including tags
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.*

      # Adjust environment for cibuildwheel per-platform
      - name: Build wheels with cibuildwheel
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *musllinux*"  # skip PyPy and musllinux (Alpine) unless you support it
          CIBW_ARCHS_LINUX: "x86_64 aarch64"  # include aarch64; remove if you want faster builds
          CIBW_ARCHS_MACOS: "universal2"
          CIBW_ARCHS_WINDOWS: "AMD64"
          MACOSX_DEPLOYMENT_TARGET: "11.0"
        run: |
          cibuildwheel --output-dir wheelhouse ./crisscross_kit

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
          if-no-files-found: error

  build_sdist:
    name: Build sdist (source distribution)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist
        run: python -m build --sdist
        working-directory: ./crisscross_kit

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: crisscross_kit/dist/*.tar.gz
          if-no-files-found: error

  publish:
    name: Publish to PyPI
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist/
          merge-multiple: true

      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/

      - name: Verify distributions
        run: |
          python -m pip install --upgrade pip
          pip install twine
          python -m twine check dist/*

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload --non-interactive dist/*
     

